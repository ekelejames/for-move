{
  "title": "rls-metric-channel-add-declarative",
  "$schema": "http://json-schema.org/draft-04/schema#",
  "description": "Generated by pyang from module rls-metric-channel-add-declarative",
  "type": "object",
  "properties": {
    "context": {
      "type": "object",
      "properties": {
        "captive": {
          "type": "string"
        },
        "shelf": {
          "type": "string"
        },
        "load": {
          "type": "string"
        },
        "release": {
          "type": "string"
        },
        "context-state-tag": {
          "type": ["string", "null"],
          "description": "References a given context state. Empty is \"default\" - whatever that means for the application"
        }
      },
      "required": [
        "captive",
        "shelf",
        "load",
        "release"
      ]
    },
    "context-state": {
      "type": "object",
      "properties": {
        "num-channels": {
          "type": "integer"
        },
        "telemetry": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "protocol": {
                "type": "string"
              },
              "is-subscription-active": {
                "type": "boolean"
              }
            }
          }
        },
        "mcp-enrollment": {
          "type": "boolean"
        }
      }
    },
    "broker-stats": {
      "type": "object",
      "properties": {
        "counters": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "The name of the counter."
              },
              "count": {
                "type": "integer",
                "description": "The number of times this counter was hit."
              },
              "time": {
                "type": "string",
                "description": "The amount of time in milliseconds."
              }
            }
          },
          "description": "List of counters collected for this component"
        },
        "round": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "number": {
                "type": "integer",
                "description": "The staging-round number."
              },
              "in-patches": {
                "type": "integer",
                "description": "The number of patches for this staging-round."
              },
              "staged-patches": {
                "type": "integer",
                "description": "Whether this staging-round has any changes."
              },
              "services": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the service."
                    },
                    "new": {
                      "type": ["boolean", "null"],
                      "description": "Whether this service is new and did not exist in any previous staging rounds."
                    },
                    "counters": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the counter."
                          },
                          "count": {
                            "type": "integer",
                            "description": "The number of times this counter was hit."
                          },
                          "time": {
                            "type": "string",
                            "description": "The amount of time in milliseconds."
                          }
                        }
                      }
                    }
                  }
                }
              },
              "counters": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the counter."
                    },
                    "count": {
                      "type": "integer",
                      "description": "The number of times this counter was hit."
                    },
                    "time": {
                      "type": "string",
                      "description": "The amount of time in milliseconds."
                    }
                  }
                }
              }
            }
          },
          "description": "The list of staging rounds."
        }
      },
      "description": "broker-stats is used to collect service-broker timing during various\nservice-broker operations. Timing collection is enabled with yang-set-object\nrpc and timing information is returned via the rpc response. More specifically,\nyang-set-object must contain ciena-common-service-broker:broker-options with\nreturn-stats attribute set to true. For commit-transaction, the timing\ncollection is enabled by setting return-stats to true in broker-options of\nthe rpc."
    },
    "num-channels-before": {
      "type": "integer"
    },
    "num-channels-after": {
      "type": "integer"
    },
    "start-time": {
      "type": "integer"
    },
    "elapsed-time": {
      "type": "string"
    },
    "operation": {
      "type": "string"
    }
  },
  "required": [
    "num-channels-before",
    "num-channels-after",
    "start-time",
    "elapsed-time",
    "operation"
  ],
  "module-revisions": {
    "rls-metric-channel-add-declarative": "2024-06-10",
    "rls-types": "2024-06-10",
    "service-broker-metric": "2024-06-10",
    "com-context-context": "2024-06-10",
    "com-types": "2024-06-10",
    "rls-metric-rls-metric": "2024-06-10",
    "ietf-yang-types": "2013-07-15",
    "ciena-common-exceptions": "2023-07-28",
    "rls-metric-channel-common": "2024-06-10",
    "ciena-pro-configs": "2023-08-08",
    "ciena-common-service-broker": "2024-01-26",
    "ciena-common-yang": "2024-01-18",
    "rls-context-rls-context": "2024-06-10",
    "ciena-common-version": "2020-06-19"
  },
  "additionalProperties": false
}
